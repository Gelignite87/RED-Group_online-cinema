user nginx;                         # Nginx будет работать под пользователем nginx и группой с тем же именем. Это помогает обеспечить безопасность, так как процессы Nginx не будут работать от имени root (что является хорошей практикой для повышения безопасности)
worker_processes auto;              # Автоматический выбор количества рабочих процессов в зависимости от количества ядер процессора. Если у сервера 4 ядра процессора, Nginx может запустить 4 рабочих процесса
error_log /var/log/nginx/error.log; # Путь к файлу, в котором будут сохраняться ошибки Nginx
pid /var/run/nginx.pid;             # Указывает путь к файлу, в котором будет храниться ID процесса (PID) Nginx. Например, при выполнении команды nginx -s stop Nginx использует этот файл для того, чтобы найти основной процесс и завершить его
events {
    worker_connections 1024;        # Максимальное количество соединений, которые каждый рабочий процесс может обслуживать одновременно. Сейчас 1024.
}

http {
    # Лимитирование запросов для защиты от брутфорса и DDoS-атак
    limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;     # Создаем зону лимитов

    server {
        listen 80;                              # IPv4
        listen [::]:80;                         # IPv6
        server_name fdasite.ru www.fdasite.ru;
        # Валидация SSL-сертификатов от Let's Encrypt.
        #Когда вы запрашиваете или обновляете SSL-сертификат через Let's Encrypt (например, с помощью клиента Certbot), он создает специальный файл в директории /var/www/certbot/.well-known/acme-challenge/. Let's Encrypt затем отправляет HTTP-запрос к вашему серверу по этому пути, чтобы убедиться, что ваш сервер отвечает на этот домен
        # Если сервер отвечает файлом, который был размещен в директории /.well-known/acme-challenge/, это подтверждает владение доменом, и Let's Encrypt может выпустить или обновить сертификат
        location /.well-known/acme-challenge/ { # Указывает, что данное правило применяется ко всем запросам, направленным на путь, начинающийся с /.well-known/acme-challenge/. Это стандартный путь, который Let's Encrypt использует для валидации доменов при выпуске или продлении сертификатов
            root /var/www/certbot;              # Указывает директорию /var/www/certbot как корневую для этого пути. Nginx будет искать файлы в этой директории, если запрос содержит путь /.well-known/acme-challenge/
        }
        return 301 https://$server_name$request_uri;    # Перенаправление на HTTPS
    }
    server {
        listen 443 ssl default_server;    # IPv4
        listen [::]:443 ssl;              # IPv6
        http2 on;
        server_name fdasite.ru www.fdasite.ru;

        ssl_certificate /etc/letsencrypt/live/fdasite.ru/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/fdasite.ru/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;          # две последние версии TLS-протокола, которые считаются безопасными
        ssl_ciphers HIGH:!aNULL:!MD5;           # эта директива определяет, какие шифры (ciphers) могут использоваться при установке защищенных соединений
        ssl_prefer_server_ciphers on;           # Сервера выбирает шифры, а не клиент
        ssl_session_cache shared:SSL:10m;       # Кэш SSL-сессий для ускорения
        ssl_session_timeout 10m;                # Время жизни SSL-сессии
        ssl_stapling on;                        # Включение OCSP stapling
        ssl_stapling_verify on;                 # Верификация OCSP stapling
        resolver 8.8.8.8 8.8.4.4 valid=300s;    # Настройка DNS для OCSP stapling
        resolver_timeout 5s;

        # Дополнительные заголовки безопасности
        add_header X-Frame-Options SAMEORIGIN;                      # Защита от кликджекинга
        add_header X-XSS-Protection "1; mode=block";                # Защита от XSS-атак
        add_header X-Content-Type-Options nosniff;                  # Запрет сниффинга MIME
        add_header Referrer-Policy "no-referrer-when-downgrade";    # Политика Referrer
        add_header Content-Security-Policy "default-src 'self';";   # Политика CSP
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";    # Принудительный HSTS на 1 год

        # Включение Gzip-сжатия позволяет снизить объем передаваемых данных, что ускоряет загрузку страниц
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_proxied any;
        gzip_min_length 256;    # Минимальный размер для сжатия
        gzip_comp_level 5;      # Уровень сжатия (1-9)

        # Логи помогают контролировать, кто подключается к вашему серверу, и диагностировать проблемы
        access_log /var/log/nginx/fdasite_online_cinema_access.log;
        error_log /var/log/nginx/fdasite_online_cinema_error.log;

        location / {
            limit_req zone=one burst=20 nodelay;    # Эта настройка позволяет одному IP-адресу отправлять 10 запросов в секунду, с возможностью "всплеска" до 20 запросов одновременно (burst=20). Параметр nodelay позволяет избежать задержек для "всплесков", если не превышен лимит
            proxy_pass http://fda_next_online_cinema:3200;
            proxy_set_header Host $host;                                    # Устанавливает заголовок Host в запросе, перенаправляемом на backend, равным значению переменной $host, которая содержит доменное имя или IP-адрес, указанный клиентом
            proxy_set_header X-Real-IP $remote_addr;                        # Устанавливает заголовок X-Real-IP равным IP-адресу клиента, который отправил запрос, то есть $remote_addr
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    # Этот заголовок используется для передачи цепочки IP-адресов клиентов, которые направляли запрос через прокси-серверы
            proxy_set_header X-Forwarded-Proto $scheme;                     # Устанавливает заголовок X-Forwarded-Proto в значение $scheme, которое содержит протокол, используемый клиентом для запроса (http или https)
        }
        
        client_max_body_size 8000m;             # Настройки размера тела запроса (например, для загрузки больших файлов)
        
        # Эта настройка кэширует статические файлы, такие как изображения, CSS и JavaScript, на 30 дней
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            expires 30d;
            add_header Cache-Control "public";
        }
        
        # Таймауты для защиты от зависших соединений
        proxy_connect_timeout 60s;      # Время ожидания установки соединения с backend
        proxy_send_timeout 60s;         # Время ожидания отправки данных на backend
        proxy_read_timeout 60s;         # Время ожидания ответа от backend
        send_timeout 60s;               # Время ожидания клиента
    }
    server {
        listen 81 ssl;                    # IPv4
        listen [::]:81 ssl;               # IPv6
        http2 on;
        server_name fdasite.ru www.fdasite.ru;

        ssl_certificate /etc/letsencrypt/live/fdasite.ru/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/fdasite.ru/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;          # две последние версии TLS-протокола, которые считаются безопасными
        ssl_ciphers HIGH:!aNULL:!MD5;           # эта директива определяет, какие шифры (ciphers) могут использоваться при установке защищенных соединений
        ssl_prefer_server_ciphers on;           # Сервера выбирает шифры, а не клиент
        ssl_session_cache shared:SSL:10m;       # Кэш SSL-сессий для ускорения
        ssl_session_timeout 10m;                # Время жизни SSL-сессии
        ssl_stapling on;                        # Включение OCSP stapling
        ssl_stapling_verify on;                 # Верификация OCSP stapling
        resolver 8.8.8.8 8.8.4.4 valid=300s;    # Настройка DNS для OCSP stapling
        resolver_timeout 5s;

        # Дополнительные заголовки безопасности
        # add_header X-Frame-Options SAMEORIGIN;                      # Защита от кликджекинга
        # add_header X-XSS-Protection "1; mode=block";                # Защита от XSS-атак
        # add_header X-Content-Type-Options nosniff;                  # Запрет сниффинга MIME
        # add_header Referrer-Policy "no-referrer-when-downgrade";    # Политика Referrer
        # add_header Content-Security-Policy "default-src 'self';";   # Политика CSP
        # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";    # Принудительный HSTS на 1 год

        # Включение Gzip-сжатия позволяет снизить объем передаваемых данных, что ускоряет загрузку страниц
        # gzip on;
        # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        # gzip_proxied any;
        # gzip_min_length 256;    # Минимальный размер для сжатия
        # gzip_comp_level 5;      # Уровень сжатия (1-9)

        # Логи помогают контролировать, кто подключается к вашему серверу, и диагностировать проблемы
        access_log /var/log/nginx/fdasite_workout_access.log;
        error_log /var/log/nginx/fdasite_workout_error.log;

        location / {
            limit_req zone=one burst=20 nodelay;    # Эта настройка позволяет одному IP-адресу отправлять 10 запросов в секунду, с возможностью "всплеска" до 20 запросов одновременно (burst=20). Параметр nodelay позволяет избежать задержек для "всплесков", если не превышен лимит
            proxy_pass http://fdasite.ru:3100;
            proxy_set_header Host $host;                                    # Устанавливает заголовок Host в запросе, перенаправляемом на backend, равным значению переменной $host, которая содержит доменное имя или IP-адрес, указанный клиентом
            proxy_set_header X-Real-IP $remote_addr;                        # Устанавливает заголовок X-Real-IP равным IP-адресу клиента, который отправил запрос, то есть $remote_addr
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    # Этот заголовок используется для передачи цепочки IP-адресов клиентов, которые направляли запрос через прокси-серверы
            proxy_set_header X-Forwarded-Proto $scheme;                     # Устанавливает заголовок X-Forwarded-Proto в значение $scheme, которое содержит протокол, используемый клиентом для запроса (http или https)
        }

        location ~ ^/(api|uploads)/ {
            limit_req zone=one burst=20 nodelay;
            proxy_pass http://fdasite.ru:4100;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        # Эта настройка кэширует статические файлы, такие как изображения, CSS и JavaScript, на 30 дней
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            expires 30d;
            add_header Cache-Control "public";
        }
        # Таймауты для защиты от зависших соединений
        proxy_connect_timeout 60s;      # Время ожидания установки соединения с backend
        proxy_send_timeout 60s;         # Время ожидания отправки данных на backend
        proxy_read_timeout 60s;         # Время ожидания ответа от backend
        send_timeout 60s;               # Время ожидания клиента
    }
    server {
        listen 83 ssl;                    # IPv4
        listen [::]:83 ssl;               # IPv6
        http2 on;
        server_name fdasite.ru www.fdasite.ru;

        ssl_certificate /etc/letsencrypt/live/fdasite.ru/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/fdasite.ru/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;          # две последние версии TLS-протокола, которые считаются безопасными
        ssl_ciphers HIGH:!aNULL:!MD5;           # эта директива определяет, какие шифры (ciphers) могут использоваться при установке защищенных соединений
        ssl_prefer_server_ciphers on;           # Сервера выбирает шифры, а не клиент
        ssl_session_cache shared:SSL:10m;       # Кэш SSL-сессий для ускорения
        ssl_session_timeout 10m;                # Время жизни SSL-сессии
        ssl_stapling on;                        # Включение OCSP stapling
        ssl_stapling_verify on;                 # Верификация OCSP stapling
        resolver 8.8.8.8 8.8.4.4 valid=300s;    # Настройка DNS для OCSP stapling
        resolver_timeout 5s;

        # Дополнительные заголовки безопасности
        add_header X-Frame-Options SAMEORIGIN;                      # Защита от кликджекинга
        add_header X-XSS-Protection "1; mode=block";                # Защита от XSS-атак
        add_header X-Content-Type-Options nosniff;                  # Запрет сниффинга MIME
        add_header Referrer-Policy "no-referrer-when-downgrade";    # Политика Referrer
        add_header Content-Security-Policy "default-src 'self';";   # Политика CSP
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";    # Принудительный HSTS на 1 год

        # Включение Gzip-сжатия позволяет снизить объем передаваемых данных, что ускоряет загрузку страниц
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_proxied any;
        gzip_min_length 256;    # Минимальный размер для сжатия
        gzip_comp_level 5;      # Уровень сжатия (1-9)

        # Логи помогают контролировать, кто подключается к вашему серверу, и диагностировать проблемы
        access_log /var/log/nginx/fdasite_workout_access.log;
        error_log /var/log/nginx/fdasite_workout_error.log;

        location / {
            limit_req zone=one burst=20 nodelay;    # Эта настройка позволяет одному IP-адресу отправлять 10 запросов в секунду, с возможностью "всплеска" до 20 запросов одновременно (burst=20). Параметр nodelay позволяет избежать задержек для "всплесков", если не превышен лимит
            proxy_pass http://fdasite.ru:3300;
            proxy_set_header Host $host;                                    # Устанавливает заголовок Host в запросе, перенаправляемом на backend, равным значению переменной $host, которая содержит доменное имя или IP-адрес, указанный клиентом
            proxy_set_header X-Real-IP $remote_addr;                        # Устанавливает заголовок X-Real-IP равным IP-адресу клиента, который отправил запрос, то есть $remote_addr
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    # Этот заголовок используется для передачи цепочки IP-адресов клиентов, которые направляли запрос через прокси-серверы
            proxy_set_header X-Forwarded-Proto $scheme;                     # Устанавливает заголовок X-Forwarded-Proto в значение $scheme, которое содержит протокол, используемый клиентом для запроса (http или https)
        }

        location ~ ^/(api|uploads)/ {
            limit_req zone=one burst=20 nodelay;
            proxy_pass http://fdasite.ru:4300;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        # Эта настройка кэширует статические файлы, такие как изображения, CSS и JavaScript, на 30 дней
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            expires 30d;
            add_header Cache-Control "public";
        }
        # Таймауты для защиты от зависших соединений
        proxy_connect_timeout 60s;      # Время ожидания установки соединения с backend
        proxy_send_timeout 60s;         # Время ожидания отправки данных на backend
        proxy_read_timeout 60s;         # Время ожидания ответа от backend
        send_timeout 60s;               # Время ожидания клиента
    }
}